// Generated by LiveScript 1.5.0
(function(){
  var ref$, get, post, atob, providers, jsonParse, root, loadItem, onlySupported, loadItems, slice$ = [].slice;
  ref$ = require('superagent'), get = ref$.get, post = ref$.post;
  atob = require('atob');
  providers = require('./providers.js');
  jsonParse = require('./json-parse.js');
  root = 'https://api.github.com/repos/web3space/plugin-registry/contents';
  loadItem = function(item, cb){
    return get(root + "/" + item.path, function(err, data){
      if (err != null) {
        return cb(err);
      }
      return jsonParse(atob(data.body.content), function(err, content){
        var ref$, ref1$;
        if (err != null) {
          return cb(err);
        }
        if (providers[(ref$ = content.mainnet) != null ? (ref1$ = ref$.api) != null ? ref1$.provider : void 8 : void 8] == null) {
          return cb(null);
        }
        return cb(null, content);
      });
    });
  };
  onlySupported = function(item){
    var ref$, ref1$;
    return providers[(ref$ = item.mainnet) != null ? (ref1$ = ref$.api) != null ? ref1$.provider : void 8 : void 8] != null;
  };
  loadItems = function(arg$, cb){
    var item, items;
    item = arg$[0], items = slice$.call(arg$, 1);
    if (item == null) {
      return cb(null, []);
    }
    return loadItem(item, function(err, data){
      if (err != null) {
        return cb(err);
      }
      return loadItems(items, function(err, rest){
        var current, all;
        if (err != null) {
          return cb(err);
        }
        current = (function(){
          switch (false) {
          case data == null:
            return [data];
          default:
            return [];
          }
        }());
        all = current.concat(rest);
        return cb(null, all);
      });
    });
  };
  module.exports = function(cb){
    return get(root + "/plugins").end(function(err, data){
      return loadItems(data.body, cb);
    });
  };
}).call(this);
