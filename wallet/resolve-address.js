// Generated by LiveScript 1.5.0
(function(){
  var ref$, map, split, find, head, filter, isValid, isValidAddress, verify, toString$ = {}.toString;
  ref$ = require('prelude-ls'), map = ref$.map, split = ref$.split, find = ref$.find, head = ref$.head, filter = ref$.filter;
  ref$ = require('./api.js'), isValidAddress = ref$.isValidAddress;
  
  isValid = function(address){
      if (address == null) {
        return false;
      }
      if (toString$.call(address).slice(8, -1) !== 'String' || toString$.call(address).trim().length === 0) {
        return false;
      }
      return true;
  };
  
  standartCheck = function(web3t, to, coin, network, cb) {
	  var addressIsValid = isValid(to);
	  if (!addressIsValid) {
		  return cb("Address is not valid");
	  }
	  return cb(null, to);
  };
  
  module.exports = function(web3t, to, coin, network, cb){
   /*  
    *  Check if provider has its own validation method.
    * */
	  isValidAddress({
		  network: network,
		  address: to
	  }, function (err, res) {
	  	if (err) {
	  		if (err === 'NON_EXISTED_METHOD') {
	  			console.log("[isValidAddress] method Not exist!");
			    return standartCheck(web3t, to, coin, network, function (err, addr) {
				    if (err != null) {
					    return cb(err);
				    }
				    return cb(null, addr);
			    });    	
		    } else {
			    return cb(err)
		    }
	  	} else {
		    return cb(null, to);
	    }
	  });
  }
    

}).call(this);
