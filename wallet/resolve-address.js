// Generated by LiveScript 1.6.0
(function(){
  var ref$, map, split, find, head, filter, isValidAddress;
  ref$ = require('prelude-ls'), map = ref$.map, split = ref$.split, find = ref$.find, head = ref$.head, filter = ref$.filter;
  isValidAddress = require('./api.js').isValidAddress;
  module.exports = function(config, cb){
	var store, network, coin, address;
	store = config.store, network = config.network, coin = config.coin, address = config.address;
	if (address.trim() === "") {
	  return cb("Address not found");
	}
	return isValidAddress({
	  network: network,
	  address: address,
	  token: coin.token
	}, function(err, isValid){
	  var isName;
	  if (isValid) {
		return cb(null, address);
	  }
	  if (err.indexOf("method is not supported") === -1) {
		if (err != null) {
		  return cb(err);
		}
	  }
	  isName = address.indexOf('.') !== -1 || address.indexOf('@') !== -1;
	  if (!isName) {
		return cb(null, address);
	  }
	  return cb("Address is not valid");
	});
  };
}).call(this);
