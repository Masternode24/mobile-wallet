// Generated by LiveScript 1.5.0
(function(){
  var providers, toJS, ref$, pairsToObj, objToPairs, action, calcFee, getKeys, getBalance, getTransactions, createTransaction, pushTx, out$ = typeof exports != 'undefined' && exports || this;
  providers = require('./providers.js');
  toJS = require('mobx').toJS;
  ref$ = require('prelude-ls'), pairsToObj = ref$.pairsToObj, objToPairs = ref$.objToPairs;
  action = function(func){
    return function(config, cb){
      var ref$, ref1$, provider, ref2$;
      if ((config != null ? (ref$ = config.network) != null ? (ref1$ = ref$.api) != null ? ref1$.provider : void 8 : void 8 : void 8) == null) {
        return cb("provider is not defined");
      }
      provider = (ref2$ = providers[config.network.api.provider]) != null ? ref2$ : insight;
      return func(provider, config, cb);
    };
  };
  out$.calcFee = calcFee = action(function(provider, config, cb){
    return provider.calcFee(config, cb);
  });
  out$.getKeys = getKeys = action(function(provider, config, cb){
    return provider.getKeys(config, cb);
  });
  out$.getBalance = getBalance = action(function(provider, config, cb){
    return provider.getBalance(config, cb);
  });
  out$.getTransactions = getTransactions = action(function(provider, config, cb){
    return provider.getTransactions(config, cb);
  });
  out$.createTransaction = createTransaction = action(function(provider, config, cb){
    return provider.createTransaction(config, cb);
  });
  out$.pushTx = pushTx = action(function(provider, config, cb){
    return provider.pushTx(config, cb);
  });
}).call(this);
